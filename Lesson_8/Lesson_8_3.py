# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.
class MyError(Exception):
    def __init__(self):
        pass

class Spisok():
    def __init__(self):
        self.spisok = []

    def dobavka(self):
        while True:
            try:
                try:
                    vvod = int(input('Ввод:'))
                    self.spisok.append(vvod)
                    print(self.spisok)
                except ValueError:
                    raise MyError
            except MyError:
                vvod = input('Вы ввели не число, попробуйте еще раз Enter! Если хотите прервать пишите stop: ')
                if vvod == 'stop':
                    break
                else:
                    self.dobavka()





a = Spisok()
a.dobavka()